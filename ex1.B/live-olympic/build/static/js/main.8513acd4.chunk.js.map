{"version":3,"sources":["serviceWorker.js","Components/Tournament.js","Components/TournamentList.js","Components/MyTournaments.js","Components/MyTournementsByYear.js","Header.js","router/router.js","index.js"],"names":["Boolean","window","location","hostname","match","Tournament","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editing","edit","bind","assertThisInitialized","delete","save","renderForm","renderUI","setState","onDelete","index","e","preventDefault","onChange","_newTournament","value","console","log","_this2","react_default","a","createElement","onSubmit","ref","input","cols","rows","onClick","md","className","children","Component","TournamentList","tournaments","eachTournament","update","add","nextID","fetch","proxyUrl","then","res","json","data","map","item","userId","score","date","time","competitor","competitorDetail","catch","err","error","newTournament","i","concat","prevState","tournament","id","objectSpread","filter","_this3","_ref$userId","_ref","_ref$score","_ref$date","_ref$time","_ref$competitor","toConsumableArray","uniqueId","key","style","width","marginBottom","Components_Tournament","MyTournaments","setData","handleChangeScore","handleChangeTime","handleChangeId","event","target","url","method","body","headers","Content-Type","type","name","MyTournementsByYear","year","getData","handleChangeCompetitor","handleChangeYear","Header","active","backgroundColor","color","fontWeight","header","listStyle","display","justifyContent","NavLink","exact","to","activeStyle","ReactRouter","Fragment","src_Header","Route","path","component","ReactDOM","render","BrowserRouter","router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8513acd4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\r\n\r\nimport { MdDelete } from 'react-icons/md'\r\nimport { MdSave } from 'react-icons/md'\r\nimport { MdEdit } from 'react-icons/md'\r\n\r\n\r\nclass Tournament extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editing: false\r\n        }\r\n        this.edit       = this.edit.bind(this)\r\n        this.delete     = this.delete.bind(this)\r\n        this.save       = this.save.bind(this)\r\n        this.renderForm = this.renderForm.bind(this)\r\n        this.renderUI   = this.renderUI.bind(this)\r\n    }\r\n    edit() {\r\n        this.setState({\r\n            editing: true\r\n        })\r\n    }\r\n    delete() {\r\n        this.props.onDelete(this.props.index)\r\n    }\r\n    save(e) {\r\n        e.preventDefault()\r\n        this.props.onChange(this._newTournament.value, this.props.index)\r\n        console.log(this._newTournament.value)\r\n        this.setState({\r\n            editing: false\r\n        })\r\n    }\r\n    renderForm(props){\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.save}>\r\n                    <textarea ref={(input) => this._newTournament = input} cols=\"30\" rows=\"10\"/>\r\n                    <span>\r\n                    <button onClick={this.save}><MdSave/></button>\r\n                    </span>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    renderUI(props) {\r\n        return (\r\n            <div className='tournament'>\r\n                <div>{this.props.children}</div>\r\n                {/* <span>\r\n                    <button onClick={this.edit} className=\"btn btn-primary\" style={{marginRight: 7+'px'}}><MdEdit></MdEdit></button>\r\n                    <button onClick={this.delete} className=\"btn btn-primary\"><MdDelete></MdDelete></button>\r\n                </span> */}\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        return this.state.editing ? this.renderForm() : this.renderUI()\r\n    }\r\n}\r\n\r\nexport default Tournament","import React, { Component } from 'react';\r\nimport Tournament from './Tournament';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport data from '../data/data.json';\r\n\r\nclass TournamentList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tournaments: [\r\n\r\n            ]\r\n        }\r\n        this.eachTournament   = this.eachTournament.bind(this)\r\n        this.update     =  this.update.bind(this)\r\n        this.delete     = this.delete.bind(this)\r\n        this.add        = this.add.bind(this)\r\n        this.nextID     = this.nextID.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const proxyUrl = 'https://cors-anywhere.herokuapp.com/'\r\n        const url = \"https://olympic-live-game.herokuapp.com/cruises\";\r\n        fetch(proxyUrl + url)\r\n        .then(res => res.json())\r\n        .then(data => data.map(item =>\r\n          this.add({userId:item.userId, score:item.score, date:item.date, time:item.time, competitor:item.competitor,competitorDetail:item.competitorDetail})))      .catch(err => console.error(err));\r\n       }\r\n\r\n    update(newTournament, i) {\r\n        console.log(`update: ${i} ${newTournament}`)\r\n        this.setState(prevState => ({\r\n            tournaments: prevState.tournaments.map(\r\n                tournament => (tournament.id !== i) ? tournament : {...tournament, tournament: newTournament}\r\n            )\r\n        }))\r\n    }\r\n\r\n    delete(id) {\r\n        console.log('delete at ', id)\r\n        this.setState(prevState => ({\r\n            tournaments:prevState.tournaments.filter(tournament => tournament.id !== id)\r\n        }))\r\n    }\r\n\r\n\r\n    add({userId = null, score = null, date = null, time = null, competitor = null}) {\r\n        console.log( userId + score + date + time + competitor);\r\n        this.setState(prevState => ({\r\n            tournaments: [\r\n                ...prevState.tournaments, {\r\n                    id:this.nextID(),\r\n                    userId: userId,\r\n                    score: score,\r\n                    date: date,\r\n                    time: time,\r\n                    competitor: competitor\r\n\r\n                }]\r\n        }))\r\n    }\r\n\r\n\r\n    nextID() {\r\n        this.uniqueId = this.uniqueId || 0\r\n        return this.uniqueId++\r\n    }\r\n\r\n    eachTournament(tournament, i) {\r\n        return (\r\n            <div key={`container${i}`} className=\"card\" style={{width: 18 + 'rem', marginBottom: 7 + 'px'}}>\r\n            <div className=\"card-body\">\r\n                <Tournament key={`tournament`+i} index={i} onChange={this.update} onDelete={this.delete}>\r\n                <h5 className=\"card-title\">Name: {tournament.competitor}</h5>\r\n                <p className=\"card-text\">Score: {tournament.score}<br/> Date: {tournament.date} <br/> Time: {tournament.time}</p>\r\n                    </Tournament>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"tournamentsList\">\r\n            { this.state.tournaments.map (this.eachTournament)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TournamentList","import React, { Component } from 'react'\r\n\r\nclass MyTournaments extends Component {\r\n        constructor(props) {\r\n          super(props)\r\n          this.state = {\r\n              tournaments: [],\r\n              score:'5',\r\n              time:'14:00',\r\n              id:2\r\n          }\r\n          this.eachTournament     = this.eachTournament.bind(this)\r\n          this.setData            = this.setData.bind(this)\r\n          this.handleChangeScore  = this.handleChangeScore.bind(this);\r\n          this.handleChangeTime   = this.handleChangeTime.bind(this);\r\n          this.handleChangeId     = this.handleChangeId.bind(this);\r\n        }\r\n  \r\n        handleChangeId(event) {\r\n          this.setState({id:event.target.value})\r\n        }\r\n\r\n      handleChangeScore(event) {\r\n        this.setState({score:event.target.value})\r\n      }\r\n\r\n      handleChangeTime(event) {\r\n        this.setState({time:event.target.value})\r\n      }\r\n\r\n      setData() {\r\n          const proxyUrl = 'https://cors-anywhere.herokuapp.com/'\r\n          const url = `https://olympic-live-game.herokuapp.com/cruise/${this.state.id}`;\r\n          fetch(`${proxyUrl}${url}`,\r\n            {method:'POST',\r\n            body:`score=${this.state.score}&time=${this.state.time}`,\r\n            headers: {\r\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n         }})\r\n          .then(res => res.json())\r\n            .catch(err => console.error(err));\r\n            console.log(this.state.score)\r\n            console.log(this.state.time)\r\n          \r\n         }\r\n  \r\n      eachTournament(tournament, i) {\r\n          return (\r\n              <div key={`container${i}`} className=\"card\" style={{width: 18 + 'rem', marginBottom: 7 + 'px'}}>\r\n              <div className=\"card-body\">\r\n                  <MyTournaments key={`tournament`+i} index={i} onChange={this.update} onDelete={this.delete}>\r\n                  <h5 className=\"card-title\">Name: {tournament.competitor}</h5>\r\n                  <p className=\"card-text\">Score: {tournament.score}<br/> Date: {tournament.date} <br/> Time: {tournament.time}</p>\r\n                      </MyTournaments>\r\n                  </div>\r\n              </div>\r\n          )\r\n      }\r\n      render(){\r\n          return (\r\n              <div className=\"tournamentsList\">\r\n              { this.state.tournaments.map (this.eachTournament)}\r\n              <label>\r\n              id:\r\n              <input type=\"number\" name=\"id\" value={this.state.id} onChange={this.handleChangeId} />\r\n            </label>\r\n            <label>\r\n              Score:\r\n              <input type=\"text\" name=\"score\" value={this.state.score} onChange={this.handleChangeScore} />\r\n            </label>\r\n            <label>\r\n              Time:\r\n              <input type=\"text\" name=\"score\" value={this.state.time} onChange={this.handleChangeTime} />\r\n            </label>\r\n            <button type=\"submit\" onClick={this.setData}>Add</button>\r\n              </div>\r\n          )\r\n      }\r\n  }\r\nexport default MyTournaments","import React, { Component } from 'react';\r\nimport Tournament from './Tournament'\r\nexport default class MyTournementsByYear extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      tournaments: [],\r\n      competitor: 'Gal Fridman',\r\n      year: '12/12/2018'\r\n    };\r\n    this.eachTournament = this.eachTournament.bind(this);\r\n    this.add = this.add.bind(this);\r\n    this.nextID = this.nextID.bind(this);\r\n    this.getData = this.getData.bind(this);\r\n    this.handleChangeCompetitor = this.handleChangeCompetitor.bind(this);\r\n    this.handleChangeYear = this.handleChangeYear.bind(this);\r\n  }\r\n  getData() {\r\n    console.log(this.state.competitor);\r\n    const proxyUrl = 'https://cors-anywhere.herokuapp.com/'\r\n    const url = \"https://olympic-live-game.herokuapp.com/getCruiseByYearCompetitor\";\r\n    fetch(`${proxyUrl}${url}` ,\r\n     {method:'PUT',\r\n     body:`year=${this.state.year}&competitor=${this.state.competitor}`,\r\n     headers: {\r\n       \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n  }\r\n})\r\n    .then(res=>res.json())\r\n    .then(data=>data.map(item =>\r\n        this.add({userId:item.userId, score:item.score, date:item.date, time:item.time, competitor:item.competitor,competitorDetail:item.competitorDetail})))\r\n        .catch(err => console.error(err));\r\n}\r\n\r\n  add({userId = null, score = null, date = null, time = null, competitor = null}){\r\n      this.setState(prevState =>({\r\n        tournaments:[\r\n          ...prevState.tournaments,{\r\n            id: this.nextID(),\r\n            userId: userId,\r\n            score: score,\r\n            date: date,\r\n            time: time,\r\n            competitor: competitor\r\n          }]\r\n\r\n      }))\r\n  }\r\n  nextID(){\r\n    this.uniqueId = this.uniqueId || 0\r\n    return this.uniqueId++\r\n  }\r\n  handleChangeCompetitor(event){\r\n    this.setState({competitor:event.target.value});\r\n  }\r\n  handleChangeYear(event){\r\n    this.setState({year:event.target.value});\r\n  }\r\n  eachTournament(tournament,i){\r\n    return (\r\n      <div key={`container${i}`} className=\"card\" style={{width: 18 + 'rem', marginBottom: 7 + 'px'}}>\r\n      <div className=\"card-body\">\r\n          <Tournament key={`tournament`+i} index={i}>\r\n                  <h5 className=\"card-title\">Name: {tournament.competitor}</h5>\r\n                  <p className=\"card-text\">Score: {tournament.score}<br/> Date: {tournament.date} <br/> Time: {tournament.time}</p>\r\n          </Tournament>\r\n          </div>\r\n      </div>\r\n  )\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"mytournementsbyyear\">\r\n      <label>\r\n        competitior: \r\n        <input type=\"text\" name=\"competitor\" value={this.state.competitor} onChange={this.handleChangeCompetitor}/>\r\n      </label>\r\n      <br/>\r\n      <label>\r\n        year: \r\n        <input type=\"text\" name=\"year\" value={this.state.year} onChange={this.handleChangeYear}/>\r\n      </label>\r\n      <br/>\r\n      <button type=\"submit\" value=\"Submit\" onClick={this.getData} >get data</button>\r\n\r\n        { this.state.tournaments.map(this.eachTournament) }\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    active = {\r\n        backgroundColor: \"#212F3D\",\r\n        color: \"white\",\r\n        fontWeight: \"bold\"\r\n    };\r\n    header = {\r\n        listStyle: \"none\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-evenly\"\r\n    };\r\n    render() {\r\n        return (\r\n            <div style={this.header}>\r\n                <NavLink exact to=\"/\" activeStyle={this.active}>\r\n                Home\r\n                </NavLink>\r\n                <NavLink to=\"/MyTournaments\" activeStyle={this.active}>\r\n                setCruisesScore\r\n                </NavLink>\r\n                <NavLink to=\"/MyTournementsByYear\" activeStyle={this.active}>\r\n                cruiseByYearName\r\n                </NavLink>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport TournamentList from '../Components/TournamentList'\r\nimport MyTournaments from '../Components/MyTournaments'\r\nimport MyTournementsByYear from '../Components/MyTournementsByYear'\r\nimport Header from '../Header'\r\n// import Route from 'react-router-dom/Route';\r\n\r\nconst ReactRouter = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Header/>\r\n            <Route exact path=\"/\" component={TournamentList}/>\r\n            <Route path=\"/MyTournaments\" component={MyTournaments}/>\r\n            <Route path=\"/MyTournementsByYear\" component={MyTournementsByYear}/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ReactRouter","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import TournamentList from './Components/TournamentList';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport ReactRouter from './router/router'\n\nReactDOM.render(\n    <Router>\n        <ReactRouter/>\n    </Router>, document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}